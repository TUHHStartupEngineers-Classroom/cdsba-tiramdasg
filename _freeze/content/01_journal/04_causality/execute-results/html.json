{
  "hash": "3f47a6c8f020e28958217a7517edab3f",
  "result": {
    "markdown": "---\ntitle: \"Causality\"\nauthor: \"Geethika Tiramdas\"\nsubtitle: \"Assignment solutions\"\ntoc: true\nnumber-sections: false\n---\n\n\nSpurious Correlation example.\n\nLoading the required libraries:\n\n::: {.cell hash='04_causality_cache/html/unnamed-chunk-1_540066d4cf19ae1d00ecea63a774b2df'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n```\n:::\n:::\n\n\nSet seed for reproducability\n\n::: {.cell hash='04_causality_cache/html/unnamed-chunk-2_5835f8ea0df13a38cca6aafa690e96a5'}\n\n```{.r .cell-code}\nset.seed(210)\n```\n:::\n\n\nThe following code has the following:\n\n* Simulation Function (simulate_ar):\n\n    + simulate_ar function generates a time series of length n with an auto-regressive structure defined by the parameter $\\phi$.\n    + The auto-regressive process is simulated with the formula $Y_t = \\phi \\cdot Y_{t-1} + \\epsilon_t$, where $\\epsilon_t$ is a normally distributed random error with mean 0 and standard deviation sigma.\n    \n* Simulation and Testing Loop:\n\n    + Set up a grid of combinations for times, n, and phis using *\"expand.grid\"*.\n    + Iterates over each combination and performs a correlation test between two time series generated with the same auto-regressive structure but different random noise.\n    + The results are stored as matrix *res*.\n\n* Data Manipulation with dplyr:\n\n    + *res* converted to a data frame (dat) grouped by the phi values, and summary statistics (average absolute correlation, average absolute t-statistic, and the percentage of statistically significant p-values).\n    \n\n::: {.cell hash='04_causality_cache/html/unnamed-chunk-3_883a6005a57f50deb04937c1b6ce9b7c'}\n\n```{.r .cell-code}\nn <- 500\ntimes <- 100\nphis <- seq(0, 1, .02)\ncomb <- expand.grid(times = seq(times), n = n, phis)\nncomb <- nrow(comb)\n\nres <- matrix(NA, nrow = ncomb, ncol = 6)\ncolnames(res) <- c('ix', 'n', 'phi', 'cor', 'tstat', 'pval')\n\nsimulate_ar <- function(n, phi, sigma = .1) {\n  y <- rep(0, n)\n  \n  for (t in seq(2, n)) {\n    y[t] <- phi*y[t-1] + rnorm(1, 0, sigma)\n  }\n  \n  y\n}\n\nfor (i in seq(ncomb)) {\n  ix <- comb[i, 1]\n  n <- comb[i, 2]\n  phi <- comb[i, 3]\n  \n  test <- cor.test(simulate_ar(n, phi = phi), simulate_ar(n, phi = phi))\n  res[i, ] <- c(ix, n, phi, test$estimate, test$statistic, test$p.value)\n}\n\ndat <- data.frame(res) %>% \n  group_by(phi) %>% \n  summarize(\n    avg_abs_corr = mean(abs(cor)),\n    avg_abs_tstat = mean(abs(tstat)),\n    percent_sig = mean(pval < .05)\n  )\n\n\nggplot(dat, aes(x = phi, y = percent_sig)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"green\") +\n  labs(title = \"Spurious Correlation: phi vs Avg Abs Correlation\",\n       x = \"X - Phi\",\n       y = \"Y - Avg Abs Correlation\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](04_causality_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThe plot shows a scatter plot with a **linear regression line**, and visualizes the average absolute correlation against the *phi* values. It helps in understanding how the **strength of the spurious correlation varies with different values of the auto-regressive parameter phi**.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}